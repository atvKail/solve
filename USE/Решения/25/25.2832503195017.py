"""
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
1. символ «?» означает ровно одну произвольную цифру;
2. символ «*» означает любую последовательность цифр произвольной длины;
в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300405.
Напишите программу, которая перебирает целые числа, большие 500 000,
в порядке возрастания и ищет среди них такие, у которых есть хотя бы один делитель,
соответствующий маске 2*3?.
В ответе запишите в первом столбце таблицы первые пять найденных чисел в порядке возрастания,
а во втором столбце - наименьший их делитель, соответствующий заданной маске.
Количество строк в таблице для ответа избыточно
"""

import re
import math


def find_divisors(n, pattern):
    divisors = []
    for i in range(1, int(math.sqrt(n)) + 1):
        if n % i == 0:
            divisors.append(i)
            if pattern.fullmatch(str(i)):
                return i
            if pattern.fullmatch(str(n // i)):
                return n // i
    return None


pattern = re.compile(r"2.*3\d")

cnt = 0
n = 500_001
while cnt < 5:
    div = find_divisors(n, pattern)
    if div is not None:
        print(n, div)
        cnt += 1
    n += 1
